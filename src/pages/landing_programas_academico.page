<apex:page cache="false" doctype="html-5.0" showheader="false" controller="Ctrl_Landing_Academico" sidebar="false" standardstylesheets="false" applyBodyTag="false" >
    <head>        
        <meta charset="utf-8"/>
        <meta content="width=device-width, initial-scale=1, shrink-to-fit=no" name="viewport"/>        
        <apex:stylesheet value="{!URLFOR($Resource.zipCalculadora,'/ZipCalculadora/css/font-awesome.min.css')}"/>
        <link href="https://fonts.googleapis.com/css?family=Roboto+Condensed" rel="stylesheet" />
        <link href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.7.0/animate.css" rel="stylesheet"/>
        <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons"/>
        <link rel="stylesheet" href="https://code.getmdl.io/1.3.0/material.indigo-pink.min.css"/>
        <script src="https://code.getmdl.io/1.3.0/material.min.js"></script>
        <apex:stylesheet value="{!URLFOR($Resource.MD, 'material-dashboard-html-v2.1.0/assets/css/material-dashboard.css?v=2.1.0.css')}" />
    </head>

<style>
body {
    background-color: #6b6b6b0d;
    margin: 0;
    padding: 0;
}
button.btn.btn-danger {
    font-weight: bold;
    font-size: 13px;
}
.niveles {
    animation-name: fadeIn;
}
</style>    

<body onload="getOnloadFunctions()">
    <div class="card-body main_card">
          <div class="card">
            <div class="card-header card-header-danger">
                <h4 class="card-title">Programas académicos</h4>
                <select id="campus_select" onchange="getTagValue(this)" class = "form-control" style="max-width:200px;"></select>
                <select id="tipo_vertical" onchange="getTagValue(this)" class = "form-control" style="max-width:200px;"></select>
            </div>
            <div class="card-body main_card" id="main_view">
                <div class="container">
                    <center>
                        <div id="tipos_niveles" class="row">
                            <!-- Sección dinámica desde => getRemoteNiveles() -->
                        </div>
                    </center>
                </div>
            <!-- End dinamic main view  -->
            </div>
        <!-- End main card body -->
        </div>
  <!--End Card  -->  
    </div>  
</body>

<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.2/js/bootstrap.min.js" integrity="sha384-o+RDsa0aLu++PJvFqy8fFScvbHFLtbvScb8AjopnFD+iEQ7wo/CG0xlczd+2O/em" crossorigin="anonymous"></script>

<script type="text/javascript">

// Onload functions

function getOnloadFunctions() {
    var campus;
    // Carga de metodo => comprobarCampus().
    window.onload = comprobarCampus();
}

//Sección: Función principal

function comprobarCampus(){
    // Declaramos => getUrlParameter para obtener parametro enviado desde page(landing_Campus2).
    var getUrlParameter = function getUrlParameter(sParam) {
    var sPageURL = decodeURIComponent(window.location.search.substring(1)),
        sURLVariables = sPageURL.split('&'),
        sParameterName,
        i;
    for (i = 0; i < sURLVariables.length; i++) {
        sParameterName = sURLVariables[i].split('=');

        if (sParameterName[0] === sParam) {
            return sParameterName[1] === undefined ? true : sParameterName[1];
        }
    }
};

// Obtenemos parametro 'campus'.
campus = getUrlParameter('campus');
// Llenamos el selector de campus dependiendo valores -parametro/manual-.
    // Campus viene lleno.
    if (campus != null) {
        $("#campus_select").append("<option>"+ campus +"</option>"); 
        getRemoteNiveles(campus);
        getRemoteCampus();

    } 
    // Campus vacio, llenado manual.
    else {
        $( "#campus_select").append("<option>-- Select --</option>"); 
        getRemoteCampus();
        getRemoteNiveles(campus);
        getRemoteVerticales(nivel);
    }
}

// Sección: Campus

function getRemoteCampus() {
    // Metodo para llamar obtener todos los Campus
    Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.Ctrl_Landing_Academico.obtenerCampus}',
            function(result, event) {
            if (event.status) {
                // Iteramos y agregamos las opciones al selector => <select id="campus_select">
                for (var i = 0; i < result.length; i ++) { 
                    $( "#campus_select").append("<option>"+result[i]+"</option>"); 
                }
            } else if (event.type === 'exception') { 
                console.log(event.messsage)
            }
        }
    );
}

// Sección: Niveles


function getRemoteNiveles(campus) {
    $( "#tipos_niveles").empty(); 
    // Metodo para llamar obtener todos los Campus
    Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.Ctrl_Landing_Academico.obtenerNivelesCampus}', campus,
            function(result, event){
            if (event.status) {
                // Iteramos lista y agregamos niveles de modo dinámico.
                for (var i = 0; i < result.length; i ++) { 
                    // Condicionamos el resultado de nuestro cilclo para asignar imágenes dinámicas a niveles.
                    if(result[i] == 'Preparatoria') {
                        img = 'https://www.universidaduvm.mx/documents/20700/159731/banner_programas_academicos_1280x440.jpg/76fcfb53-c5e1-4aa4-a5ec-f23ec785668a?t=1488927545000';
                    } else if (result[i] == 'Licenciatura') {
                        img = 'https://www.universidaduvm.mx/documents/20700/159731/home+licenciatura_608x209.jpg/15594345-2b46-48f6-98fc-a815b6642874?t=1483165363000';
                    } else if (result[i] == 'Licenciatura Ejecutiva') {
                        img = 'https://www.universidaduvm.mx/documents/20700/159731/homeLX_online_608x209.jpg/7cc39d82-4fa9-41d2-9b47-0ed5d41660ba?t=1483165364000';
                    } else if (result[i] == 'Posgrado') {
                        img = 'https://www.universidaduvm.mx/documents/20700/159754/homePG_presencial_1280x440.jpg/b018722b-0233-4b46-af27-051a2f17f1a4?t=1483165396000';
                    } else if (result[i] == 'Online Posgrado') {
                        img = 'https://www.universidaduvm.mx/documents/20700/159731/homePG_online_608x209.jpg/7c09662a-dd0d-43ab-8c22-f9bc36ac9a76?t=1483165364000';
                    } else if (result[i] == 'Online LX') {
                        img = 'https://www.universidaduvm.mx/documents/20700/47029/CAMPUS_UVM_Puebla.jpg';
                    } else if (result[i] == 'Tecnico Superior') {
                        img = 'https://www.universidaduvm.mx/documents/20700/159731/tsu_mantenimiento_industrial_automotriz_banner_608x209.jpg/75f827af-daa8-40ba-ba7c-972cafd2de90?t=1484019462000';
                    }
                    $("#tipos_niveles").append("<div class='col-sm'><div class='card animated fadeIn' style='width: 22rem;'><img class='card-img-top' src=' " + img + " '/><div class='card-body'><h5 class='card-title'> " + result[i] + " <div class='card-body'><button type='button' onClick='getRemoteVerticales(\"" + result[i] + "\")' class='btn btn-danger'>Vertical</button></div></div></div></h5></div>"); 
                }
            } else if (event.type === 'exception') { 
                console.log(event.messsage)
            }
            console.log(result);

        }
    );
}

// Recibimos seleción del selector de forma manual.
function getTagValue(selTag) {
    var campus_manual = selTag.options[selTag.selectedIndex].text;
    // Envíamos como parámetro a => getRemoteNiveles() la selección manual.
    var nivel = selTag.options[selTag.selectedIndex].text;
    getRemoteNiveles(campus_manual);
    getRemoteVerticales(nivel);
    campus = campus_manual; 
}

// Sección: Vertical

function getRemoteVerticales(nivel) {
    $( "#tipo_vertical").empty(); 
    // Metodo para obtener todos los Campus desde => obtenerCampus().
    Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.Ctrl_Landing_Academico.obtenerVerticalNivel}', campus, nivel,
            function(result, event){
            if (event.status) {
                // Iteramos lista y agregamos a etiqueta => <select id="programa_select">
                for (var i = 0; i < result.length; i ++) { 
                    $( "#tipo_vertical").append("<option>"+result[i]+"</option>"); 
                    console.log('Dentro de verticlaes');
                }
            } else if (event.type === 'exception') { 
                console.log(event.messsage)
            }
        }
    );
}

// Sección: Programas

function getRemoteProgramas() {
 // Metodo para obtener todos los Campus desde => obtenerCampus().
    Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.Ctrl_Landing_Academico.obtenerProgramasAcademicos}',
            function(result, event){
            if (event.status) {
                // Iteramos lista y agregamos a etiqueta => <select id="programa_select">
                for (var i = 0; i < result.length; i ++) { 
                    $( "#programa_select").append("<option>"+result[i]+"</option>"); 
                }
            } else if (event.type === 'exception') { 
                console.log(event.messsage)
            }
        }
    );
}

</script>
</apex:page>