<apex:page cache="false" controller="ctrl_landing_reasignar_oportunidades" doctype="html-5.0" showheader="false" sidebar="false" standardstylesheets="false" applyBodyTag="false" >

    <style>
    .final_percent{
          text-align: right;
          position: absolute;
          right: 0;
          margin-right: 100px;
          font-size: 51px;
          margin-top: -33px;
          opacity: 0.7;
    }
	</style>
<head>
  <meta charset="utf-8"/>
        <meta content="width=device-width, initial-scale=1, shrink-to-fit=no" name="viewport"/>
        <apex:stylesheet value="{!URLFOR($Resource.zipCalculadora,'/ZipCalculadora/css/font-awesome.min.css')}"/>
        <link href="https://fonts.googleapis.com/css?family=Roboto+Condensed" rel="stylesheet" />
        <apex:stylesheet value="{!URLFOR($Resource.MD, 'material-dashboard-html-v2.1.0/assets/css/material-dashboard.css?v=2.1.0.css')}" />
        <!-- Chartist JS -->
  <title>
  Dashboard
  </title>
</head>

<body class="">
  <div class="wrapper">

    <div class="main-panel">
      <!-- Navbar -->
      <nav class="navbar navbar-expand-lg navbar-transparent navbar-absolute fixed-top ">
        <div class="container-fluid">
          <div class="navbar-wrapper">
            <a class="navbar-brand" href="#pablo">Asignacíon</a>
          </div>
        </div>
      </nav>
      <!-- End Navbar -->
      <div class="content">
        <div class="container-fluid">
          <!-- your content here -->

          <div class="col-lg-10 col-md-12">

            <form>
              <div class="form-group">
                 <label for="exampleInput1" class="bmd-label-floating">Selecciona un Campus</label>
                 <select class= "form-control" id= "select_Agent">
                     	<!--Se cargan los gerentes de esta seccion  -->
                     <option>Campus1</option>
                     <option>Campus2</option>
                     <option>Campus3</option>
                 </select>
              </div>
          </form>
            <div class="card">
              <div class="card-header card-header-danger">
                  <h4 class="card-title">Personas para asignar: <div>4325</div></h4>
                <p class="card-category">Seleccione un porcentaje para cada agente</p>
                <span class='final_percent'>60%</span>
              </div>
              <div class="card-body table-responsive">
                <button onclick="equitativeAssign()" type="button" class="btn btn-danger col-md-4 col-lg-auto" >Asignación equitativa</button>
                <button onclick="weightAssign()" type="button" class="btn btn-danger col-md-4 col-lg-auto">Asignación por peso</button>
                <button onclick="deasignAgents" type="button" class="btn btn-danger col-md-auto">Desasignar Agentes seleccionados</button>
                <table class="table table-hover">
                  <thead class="text-warning">
                    <th><input type ="checkbox" onclick="checkFuncition()"/></th>
                    <th>ID</th>
                    <th>Nombre</th>
                    <th>Estado</th>
                    <th>Oportunidades</th>
                    <th>Porcentaje</th>
                  </thead>
                  <tbody id="MainTable">
                  </tbody>
                </table>
            	<button type="button" onclick="getPercentages()" class="btn btn-success ">Confirmar</button>
              </div>
            </div>

          </div>
          <!--End Table  -->

        </div>
      </div>

    </div>
  </div>

  <!--   Core JS Files   -->
<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.2/js/bootstrap.min.js" integrity="sha384-o+RDsa0aLu++PJvFqy8fFScvbHFLtbvScb8AjopnFD+iEQ7wo/CG0xlczd+2O/em" crossorigin="anonymous"></script>

<script>
    //Variables Globales
	var agents=0;
    //Funcion para asignar a los agentes por peso
    function weightAssign(){
                for(i = 0; i<agents; i++){
            		$("#formTextPercentage"+i).removeAttr('disabled');
                    $("#formTextPercentage"+i).val('');
                }
    }
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //Funcion para asignar los porcentajes equitativos
    function equitativeAssign(){
        var active=0;
        for(i = 0; i<agents; i++){
            if($("#formActive"+i).html() == "Activo"){
                active++;
            }
        }
        var equitativePercent = Math.floor(100 / active);
        var sumPercent = 0;
        for(i = 0; i<agents; i++){
            $("#formTextPercentage"+i).attr('disabled','disabled');
            if($("#formActive"+i).html() == "Activo"){
                if(active != 1){
                    sumPercent+= equitativePercent;
                }else{
                    equitativePercent = 100 - sumPercent;
                }
                active--;
                $("#formTextPercentage"+i).val(equitativePercent);
            }
        }
    }
    //////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //Funcion para marcar los checkboxes de los agentes
	function checkFuncition(){

    }
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //Función para verificar que el 100% se asigna
    function getPercentages(){
        var sumPercent = 0.0;
        var arrPercent = [];
        var lastAssigned = 0.0;
        for(i = 0; i< agents ; i++){
            if ($("#formTextPercentage"+i).val().length != 0) {
                sumPercent += $("#formTextPercentage"+i).val()/1;
            }
    	}
        //se evalua que se cubra el 100% de las oportunidades
        if (sumPercent == 100){
            console.log("correcto");
        }else{
            console.log("incorrecto cubra el 100% de las oportunidades");
        }
    }
    //////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //Funcion que restringe la entrada de los numeros del selector de porcentaje a solo numero, y ademas calcula el porcentaje de utilizado
    function validateNumbers(e){
        tecla = (document.all) ? e.keyCode : e.which;
        //Tecla de retroceso para borrar, siempre la permite
        if (tecla==8){
            return true;
        }
        // se crea un patron para que acepte los digitos del 0 al 9 y el punto decimal
        patron =/[0-9|.]/;
        tecla_final = String.fromCharCode(tecla);
        return patron.test(tecla_final);
}
    //////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //Función para obtener a los Gerentes y llenar la parte del selector de gerente
    function getNombres() {
        //se llama a la función remota de apex que hace la busqueda de gerentes
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ctrl_landing_reasignar_oportunidades.getAsesores}',
            function(result, event){
                if (event.status) {
                    for (var i = 0; i < result.length; i ++){
                        var isItActive = "";
                        if(result[i].IsActive == true){
                            isItActive = "Activo"
                        }else{
                            isItActive = "Inactivo"
                        }
                        $("#MainTable").append("<tr>"
                                               +"<td><input type = 'checkbox'/></td>"
                                               +"<td><a href='#'>"+result[i].Id+"</a></td>"
                                               +"<td>"+result[i].Name+"</td>"
                                               +"<td id='formActive"+i+"'>"+isItActive+"</td>"
                                               +"<td align='center'>"+"430"+"</td>"
                                               +"<td><input onkeypress='return validateNumbers(event)' type='text' class='form-control-range' id='formTextPercentage"+i+"'/></td>"
                                               +"</tr>");
                        agents++;
                    }
                }else if (event.type === 'exception') {
                    console.log(event.messsage)
                }
            }
        );
        }
    //////////////////////////////////////////////////////////////////////////////////////////////////////////////
     window.onload = getNombres();


</script>


    <!-- <script>
//  var slider = document.getElementById("myRange");
//  var output = document.getElementById("demo");
//output.innerHTML = slider.value; // Display the default slider value

    // Update the current slider value (each time you drag the slider handle)
		//slider.oninput = function() {

		//output.innerHTML = this.value;
//}
  </script> -->
</body>
</apex:page>
